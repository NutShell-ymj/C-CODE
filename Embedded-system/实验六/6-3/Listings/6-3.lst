C51 COMPILER V9.57.0.0   6_3                                                               10/17/2020 18:02:10 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE 6_3
OBJECT MODULE PLACED IN .\Objects\6-3.obj
COMPILER INVOKED BY: D:\Keil-C51\keil\C51\BIN\C51.EXE 6-3.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\6-3.lst) OBJECT(.\Objects\6-3.obj)

line level    source

   1          /*ds1302显示时间（通过串口调试助手）*/
   2          #include<reg52.h>
   3          #include <intrins.h>
   4           
   5          typedef unsigned char uint8;
   6          typedef unsigned int  uint16;  
   7          sbit SDA=P3^4;  //数据  
   8          sbit SCK=P3^5; //时钟
   9          sbit RST=P1^7;  //DS1302复位(片选)
  10          uint8 time[7]={50,41,20,9,8,4,12};//秒分时日月周年10-08-15 23:59:50   7代表周日
  11          #define DS1302_W_ADDR 0x80
  12          #define DS1302_R_ADDR 0x81
  13           
  14           
  15          void ds1302_reset()//令SCK=0；RST=1
  16          {
  17   1        RST=0;//停止数据传送
  18   1        SCK=0;//时钟总线清零
  19   1        RST=1;//数据操作
  20   1      }
  21           
  22          //写一个字节
  23          void ds1302_write_byte(uint8 dat)
  24          {
  25   1        uint8 i;
  26   1        
  27   1       for(i=0;i<8;i++)
  28   1       {
  29   2         SDA=dat & 0x01;
  30   2         SCK=1;
  31   2         SCK=0;
  32   2         dat>>=1;
  33   2       }
  34   1      }
  35           
  36          //读一个字节
  37          //对于数据输出：开始的8 个SCLK 周期，输入一个读命令字节，数据字节在后8 个SCLK周期的下降沿输出
  38          //注意，第一个数据字节的第一个下降沿发生后，命令字的最后一位被写入
  39          //（Note that the first data bit to be transmitted occurs on the first falling edge after the last bit of 
             -the command byte is written. ），
  40          //也就是命令字节最后一个字节写入后产生的下降沿使得第一个数据位被读取
  41           
  42          uint8 ds1302_read_byte()
  43          {
  44   1       uint8 i,dat=0;//用dat存储读到的数据
  45   1       for(i=0;i<8;i++)
  46   1       {
  47   2          
  48   2              dat>>=1;        
  49   2              if(SDA==1)
  50   2                dat=dat | 0x80;//因为从低位开始读
  51   2              SCK=1;
  52   2              SCK=0;  //由上面解释可以知道：我们首先应该判断  if(SDA==1)，然后进行SCK=1，SCK=0
  53   2       
C51 COMPILER V9.57.0.0   6_3                                                               10/17/2020 18:02:10 PAGE 2   

  54   2       }
  55   1       return dat;
  56   1      }
  57           
  58          //清除写保护
  59          void ds1302_clear_WP()
  60          {
  61   1        ds1302_reset();
  62   1        RST=1;
  63   1        ds1302_write_byte(0x8E);//写入地址
  64   1        ds1302_write_byte(0x00);//写入数据
  65   1        //写完后
  66   1        SDA=0;
  67   1        RST=0;
  68   1        
  69   1      }
  70           
  71          //设置写保护
  72          void ds1302_set_WP()
  73          {
  74   1        ds1302_reset();
  75   1        RST=1;
  76   1        ds1302_write_byte(0x8E);//写入地址
  77   1        ds1302_write_byte(0x80);//写入数据
  78   1        //写完后
  79   1        SDA=0;
  80   1        RST=0;
  81   1        
  82   1      }
  83           
  84           
  85           
  86          //写入ds1302
  87          void ds1302_write(uint8 addr,uint8 dat)
  88          {
  89   1        ds1302_reset();
  90   1        RST=1;
  91   1        ds1302_write_byte(addr);//写入地址
  92   1        ds1302_write_byte(dat);//写入数据
  93   1        //写完后
  94   1        RST=0;
  95   1        SDA=0;
  96   1      }
  97           
  98          //从ds1302读数据
  99          uint8 ds1302_read(uint8 addr)
 100          {
 101   1        uint8 temp=0;//存储读出来的数据
 102   1        ds1302_reset();
 103   1        RST=1;
 104   1        ds1302_write_byte(addr);//写入地址
 105   1        temp=ds1302_read_byte();//写入数据
 106   1        //写完后
 107   1        RST=0;
 108   1        SDA=0;
 109   1        return temp;
 110   1      }
 111           
 112          void delay(uint16 n)
 113          { 
 114   1        while(n--);
 115   1      }
C51 COMPILER V9.57.0.0   6_3                                                               10/17/2020 18:02:10 PAGE 3   

 116           
 117           
 118          /**
 119           * 设定时钟数据
 120           其中涉及二进制和BCD转换  因为ds1302存BCD ，但是机器只认识二进制
 121           例如：存入ds1302为50  0101 0000  那么我们写入的是ds1302_write（80）
 122          */
 123          void set_time(uint8 *timedata)
 124          {
 125   1              uint8 i;
 126   1              uint8 temp=0;
 127   1              for(i=0;i<7;i++)
 128   1              {
 129   2                temp=timedata[i]/10;
 130   2                timedata[i]=timedata[i]%10;
 131   2                timedata[i]=timedata[i]+temp*16;
 132   2              }
 133   1              ds1302_clear_WP();//对ds1302操作前先将wp位清零
 134   1              temp=DS1302_W_ADDR;//写入起始位置
 135   1              for(i=0;i<7;i++)
 136   1              {
 137   2                ds1302_write(temp,timedata[i]);
 138   2                temp+=2;
 139   2              }
 140   1              ds1302_set_WP();
 141   1       
 142   1      }
 143           
 144          /**
 145           * 读时钟数据（BCD格式）
 146          */
 147          void read_time(uint8 *timedata)
 148          {
 149   1         uint8 i,temp;
 150   1         temp=DS1302_R_ADDR;//读起始位置
 151   1         for(i=0;i<7;i++)
 152   1         {
 153   2           timedata[i]=ds1302_read(temp);
 154   2               temp+=2;
 155   2         }
 156   1      }
 157          /* UART初始化
 158           * 波特率：9600
 159          */
 160          void uart_init(void)
 161          {
 162   1        TMOD=0x21;
 163   1        SCON=0x50;
 164   1        
 165   1        TH1=0xFD;
 166   1        TL1=0xFD;
 167   1        
 168   1        TR1=1;  
 169   1      }
 170           
 171          /**
 172           * UART发送一字节
 173          */
 174          void UART_Send_Byte(uint8 dat)
 175          { 
 176   1        SBUF=dat;
 177   1        while(TI==0);
C51 COMPILER V9.57.0.0   6_3                                                               10/17/2020 18:02:10 PAGE 4   

 178   1         TI=0;
 179   1      }
 180           
 181          /**
 182           * 将数据转换成ASC码并通过UART发送出去
 183          */
 184          void UART_Send_Dat(uint8 dat)  //注意是关于16取余
 185          {
 186   1         UART_Send_Byte(dat/16+'0');
 187   1         UART_Send_Byte(dat%16+'0');   
 188   1      }
 189          void main()
 190          {
 191   1               
 192   1       
 193   1              uart_init();
 194   1              set_time(&time);    //设定时间值
 195   1       
 196   1              while(1)
 197   1              {
 198   2       
 199   2                      read_time(&time);   //秒分时日月周年
 200   2              
 201   2                      UART_Send_Dat(time[6]);
 202   2                      UART_Send_Byte('-');
 203   2                      UART_Send_Dat(time[4]);
 204   2                      UART_Send_Byte('-');
 205   2                      UART_Send_Dat(time[3]);
 206   2                      UART_Send_Byte(' ');
 207   2       
 208   2                      UART_Send_Dat(time[2]);
 209   2                      UART_Send_Byte(':');
 210   2                      UART_Send_Dat(time[1]);
 211   2                      UART_Send_Byte(':');
 212   2                      UART_Send_Dat(time[0]);
 213   2                      UART_Send_Byte('\r');
 214   2                      UART_Send_Byte('\n');
 215   2       
 216   2                      delay(10000);
 217   2              }
 218   1      }
 219           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    414    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
